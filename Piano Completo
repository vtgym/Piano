
import tkinter as tk
import numpy as np
import sounddevice as sd
import time

FREQUENCIES = {
    "C3": 130.81, "C#3": 138.59, "D3": 146.83, "D#3": 155.56, "E3": 164.81,
    "F3": 174.61, "F#3": 185.00, "G3": 196.00, "G#3": 207.65, "A3": 220.00, "A#3": 233.08, "B3": 246.94,
    "C4": 261.63, "C#4": 277.18, "D4": 293.66, "D#4": 311.13, "E4": 329.63,
    "F4": 349.23, "F#4": 369.99, "G4": 392.00, "G#4": 415.30, "A4": 440.00, "A#4": 466.16, "B4": 493.88,
}
WHITE_KEYS_ORDER = [k for k in FREQUENCIES if "#" not in k]
BLACK_KEYS_ORDER = [k for k in FREQUENCIES if "#" in k]

KEY_WIDTH = 40
KEY_HEIGHT = 200
BLACK_WIDTH = 25
BLACK_HEIGHT = 120

KEYBOARD_MAP = {
    "a": "C3", "w": "C#3", "s": "D3", "e": "D#3", "d": "E3",
    "f": "F3", "t": "F#3", "g": "G3", "y": "G#3", "h": "A3", "u": "A#3", "j": "B3",
    "k": "C4", "o": "C#4", "l": "D4", "p": "D#4", ";": "E4",
    "z": "F4", "x": "F#4", "c": "G4", "v": "G#4", "b": "A4", "n": "A#4", "m": "B4"
}

def tocar_nota(frequencia, duracao=0.3, volume=1.5):
    sample_rate = 44100
    t = np.linspace(0, duracao, int(sample_rate * duracao), False)
    onda = volume * np.sin(2 * np.pi * frequencia * t)
    sd.play(onda, samplerate=sample_rate)
sd.wait()

class Gravador: 
    def init(self): 
        self.registro = [] 
        self.gravando = False 

    def iniciar(self): 
        self.registro = [] 
        self.inicio = time.time() 
        self.gravando = True 
        status_var.set("Gravando...") 

    def gravar(self, nota): 
        if self.gravando: 
            tempo = time.time() - self.inicio 
            self.registro.append((nota, tempo)) 
    
    def parar(self): 
        self.gravando = False 
        status_var.set("Pronto.")
         
    def reproduzir(self): 
        if not self.registro: 
            status_var.set("Nenhuma gravação.") 
            return status_var.set("Reproduzindo...") 
            base = self.registro[0][1] 
            for nota, tempo in self.registro: 
                delay = tempo - base 
                time.sleep(delay) 
                tocar_nota(FREQUENCIES[nota]) 
                base = tempo 
            status_var.set("Pronto.")
            
def pressionar_tecla(nota):
        if nota in FREQUENCIES:
         tocar_nota(FREQUENCIES[nota])
        gravador.gravar(nota)

def pressionar_teclado(event):
    tecla = event.char.lower()
    if tecla in KEYBOARD_MAP:
        nota = KEYBOARD_MAP[tecla]
        pressionar_tecla(nota)
janela = tk.Tk()
janela.title("Piano com Teclas Visuais e Teclado PC")
janela.geometry("560x320")
janela.resizable(False, False)
janela.bind("<Key>", pressionar_teclado)

canvas = tk.Canvas(janela, width=1000, height=250)
canvas.pack()

white_keys = []
white_notes = []
i = 0
for nota in WHITE_KEYS_ORDER:
    x = i * KEY_WIDTH
    btn = tk.Button(
        janela, text=nota, bg="white", relief="raised",
        command=lambda n=nota: pressionar_tecla(n)
    )
    btn.place(x=x, y=0, width=KEY_WIDTH, height=KEY_HEIGHT)
    white_keys.append(btn)
    white_notes.append(nota)
    i += 1

#Teclas pretas
black_positions = {
    "C#3": 0, "D#3": 1, "F#3": 3, "G#3": 4, "A#3": 5,
    "C#4": 7, "D#4": 8, "F#4": 10, "G#4": 11, "A#4": 12
}

for nota, index in black_positions.items():
    x = (index + 1) * KEY_WIDTH - BLACK_WIDTH // 2
    btn = tk.Button(
        janela, text=nota, fg="white", bg="black", relief="raised",
        command=lambda n=nota: pressionar_tecla(n)
    )
    btn.place(x=x, y=0, width=BLACK_WIDTH, height=BLACK_HEIGHT)
gravador = Gravador()

frame_controles = tk.Frame(janela)
frame_controles.pack(pady=5)

btn_gravar = tk.Button(frame_controles, text="Gravar", bg="red", fg="white", command=gravador.iniciar)
btn_gravar.pack(side="left", padx=10)
btn_parar = tk.Button(frame_controles, text="Parar", bg="gray", fg="white", command=gravador.parar)
btn_parar.pack(side="left", padx=10)
btn_reproduzir = tk.Button(frame_controles, text="Reproduzir", bg="green", fg="white", command=gravador.reproduzir)
btn_reproduzir.pack(side="left", padx=10)

status_var = tk.StringVar()
status_var.set("Pronto.")
status_label = tk.Label(janela, textvariable=status_var)
status_label.pack(pady=5)

janela.mainloop()